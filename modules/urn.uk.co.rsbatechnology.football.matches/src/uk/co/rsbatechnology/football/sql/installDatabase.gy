import org.netkernel.mod.hds.IHDSDocument;
import org.netkernel.mod.hds.IHDSReader;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.sql.Date;

try
{	req=context.createRequest("active:sqlQuery");
	req.addArgumentByValue("operand", """SELECT * FROM matches LIMIT 1;""");
	rep=context.issueRequest(req);
	    
	rep="<div><h1>Database Already Installed</h1></div>";
}
catch(Exception e)
{
	// Create schema
	req=context.createRequest("active:sqlUpdate");
	req.addArgument("operand", "res:/uk/co/rsbatechnology/football/sql/db-schema.sql");
	rep=context.issueRequest(req);
	
	
	// Get HDS2  representation of set of matches
	IHDSDocument matches = context.source("arg:matches", IHDSDocument.class);
	
	IHDSReader reader = matches.getReader();
	
	// Loop over all match nodes
	for(IHDSReader match: reader.getNodes("/matches/match")) {
		// Extract data out of HDS document
		String div = (String) match.getFirstValue("div");
		String date = (String) match.getFirstValue("date");
        Date asDate = Date.valueOf(LocalDate.parse(date, DateTimeFormatter.ISO_LOCAL_DATE));
		String homeTeam = (String) match.getFirstValue("homeTeam");
		String awayTeam = (String) match.getFirstValue("awayTeam");
		int homeGoals = Integer.parseInt((String) match.getFirstValue("fthg"));
		int awayGoals = Integer.parseInt((String) match.getFirstValue("ftag"));
		String result = (String) match.getFirstValue("ftr");

		req = context.createRequest("active:sqlPSUpdate");
		req.addArgumentByValue("operand", "INSERT INTO matches VALUES (NULL, ?, ?, ?, ?, ?, ?, ?);")
		req.addArgumentByValue("param", div);
		req.addArgumentByValue("param", asDate);
		req.addArgumentByValue("param", homeTeam);
		req.addArgumentByValue("param", awayTeam);
		req.addArgumentByValue("param", homeGoals);
		req.addArgumentByValue("param", awayGoals);
		req.addArgumentByValue("param", result);
		rep=context.issueRequest(req);

	}

	rep="<div><h1>Database Installed Successfully</h1></div>";
}
	
resp=context.createResponseFrom(rep)
resp.setExpiry(resp.EXPIRY_ALWAYS)
